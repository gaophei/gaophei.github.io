#安装手册

0. this tools will only install kubernetes v1.25.4 for CKA Exam upgrad，三台服务器root密码为1
1. 环境准备
1.0 sudo -i
1.1 complete /etc/hosts file
# sed -i 's/^/#/g' /etc/hosts

# cat >> /etc/hosts <<EOF
127.0.0.1 localhost
192.168.1.234 k8s-master
192.168.1.235 k8s-docker1
192.168.1.236 k8s-docker2
EOF

# cat /etc/hosts

  
1.2 enable root ssh login on /etc/ssh/sshd_config 
# sudo sed -i 's/^#PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config
# sudo systemctl restart sshd
	
1.3 Modify Ubuntu Repository to Nanjing Edu

# cat > /etc/apt/sources.list <<EOF
deb https://mirror.nju.edu.cn/ubuntu focal main restricted
deb https://mirror.nju.edu.cn/ubuntu focal-updates main restricted
deb https://mirror.nju.edu.cn/ubuntu focal universe
deb https://mirror.nju.edu.cn/ubuntu focal-updates universe
deb https://mirror.nju.edu.cn/ubuntu focal multiverse
deb https://mirror.nju.edu.cn/ubuntu focal-updates multiverse
deb https://mirror.nju.edu.cn/ubuntu focal-backports main restricted universe multiverse
deb https://mirror.nju.edu.cn/ubuntu focal-security main restricted
deb https://mirror.nju.edu.cn/ubuntu focal-security universe
deb https://mirror.nju.edu.cn/ubuntu focal-security multiverse
EOF

# apt update && apt install sshpass wget bash-completion -y

或者执行：
# cp /etc/apt/sources.list /etc/apt/sources.list.bak
# sed -i 's/^deb.*archive.ubuntu.com/deb https:\/\/mirrors.nju.edu.cn/' /etc/apt/sources.list

# apt update && apt install sshpass wget bash-completion -y

1.4 disable swap on /etc/fstab
# cat /etc/fstab
# sed -i 's/^\/swap.img/#\/swap.img/' /etc/fstab
# cat /etc/fstab
# swapoff -a
# rm -rfv /swap.img
	  
1.5 Deploy chrony for make sure time 
# rm /var/lib/apt/lists/lock
# rm /var/cache/apt/archives/lock
# rm /var/lib/dpkg/lock*
# dpkg --configure -a
# apt update

# apt install -y chrony
# systemctl enable chrony --now

1.6 修改为东八区
# cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
# data -R

1.7 生成ssh key
# ssh-keygen -t rsa -f /root/.ssh/id_rsa -N ''

# sshpass -p 1 ssh-copy-id -o StrictHostKeyChecking=no root@k8s-master

# sshpass -p 1 ssh-copy-id -o StrictHostKeyChecking=no root@k8s-docker1

# sshpass -p 1 ssh-copy-id -o StrictHostKeyChecking=no root@k8s-docker2

2. Configure Kubernetes
2.1 Deploy Nanjing Edu Docker Repository
# apt-get -y install apt-transport-https ca-certificates curl software-properties-common
# curl -fsSL https://mirror.nju.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -
# add-apt-repository "deb [arch=amd64] https://mirror.nju.edu.cn/docker-ce/linux/ubuntu $(lsb_release -cs) stable"
# apt-get -y update

2.2 Deploy Docker
# apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

2.3 ADD 163 docker mirror
# mkdir -p /etc/docker
# tee /etc/docker/daemon.json <<-'EOF'
{
  "registry-mirrors": ["http://hub-mirror.c.163.com"],
  "exec-opts": ["native.cgroupdriver=systemd"]
}
EOF

# systemctl daemon-reload&&systemctl restart docker

configure iptables module
# cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF

configure iptables bridge
# cat > /etc/sysctl.d/k8s.conf <<EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF

# modprobe br_netfilter
# sysctl --system

2.4 name: add Nanjing Edu kubernetes repo on ubuntu
# cat > /etc/apt/sources.list.d/k8s.list <<EOF
deb https://mirror.nju.edu.cn/kubernetes/apt/ kubernetes-xenial main
EOF
# curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add -
# apt update
# apt-key list

name: install kubeadm kubectl kubelet
# apt install -y kubeadm=1.25.4-00 kubelet=1.25.4-00 kubectl=1.25.4-00 sshpass

name: clean apt lock
rm /var/lib/apt/lists/lock
rm /var/cache/apt/archives/lock
rm /var/lib/dpkg/lock*
dpkg --configure -a
apt update

2.5 name: integrate with docker
name: integrate with docker
# ps -ef|grep sock
root       97567       1  0 11:50 ?        00:00:02 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock

# sed -i 's/^disabled_plugins/#disabled_plugins/g' /etc/containerd/config.toml
# systemctl restart containerd

# crictl config --get runtime-endpoint

# crictl config runtime-endpoint unix:///var/run/containerd/containerd.sock
# crictl config --get runtime-endpoint

2.6 name: creating kubeadm.yaml---只在k8s-master节点
# kubeadm config print init-defaults > kubeadm.yaml
name: modify api server address
# sed  -i 's/advertiseAddress: 1.2.3.4/advertiseAddress: 192.168.1.234/g' kubeadm.yaml

name: modify cluster name
# sed  -i 's/name: node/name: k8s-master/g' kubeadm.yaml

name: modify image repository
# sed  -i 's/imageRepository: registry.k8s.io/imageRepository: registry.cn-hangzhou.aliyuncs.com\/google_containers/g' kubeadm.yaml

name: 检查criSocket: unix:///var/run/containerd/containerd.sock

name: scp kubeadm.yaml 
# scp /root/kubeadm.yaml k8s-docker1:/root/
# scp /root/kubeadm.yaml k8s-docker2:/root/

name: Pull kubernetes images on all nodes
# kubeadm config images list --config kubeadm.yaml
# kubeadm config images pull --config kubeadm.yaml

name: Modify kubernetes image pause tag on all nodes
# ctr -n k8s.io image ls
# ctr -n k8s.io image tag registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.8 registry.k8s.io/pause:3.6
# ctr -n k8s.io image ls -q|grep pause

2.7 name: Deploy kubernetes on Master node---只在k8s-master节点
# kubeadm init --config kubeadm.yaml | tee -a /root/installdetails.log

name: set up admin role
# mkdir -p $HOME/.kube
# cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
# chown $(id -u):$(id -g) $HOME/.kube/config
# sshpass -p 1 ssh -A -g -o StrictHostKeyChecking=no root@k8s-docker1 mkdir /root/.kube 
# sshpass -p 1 ssh -A -g -o StrictHostKeyChecking=no root@k8s-docker2 mkdir /root/.kube
# scp /etc/kubernetes/admin.conf root@k8s-docker1:/root/.kube/config
# scp /etc/kubernetes/admin.conf root@k8s-docker2:/root/.kube/config

name: Deploy Calico
# kubectl create -f https://gitee.com/cnlxh/Kubernetes/raw/master/cka-yaml/calico.yaml

2.8  name: join workers
# join=`sshpass -p 1 ssh -A -g -o StrictHostKeyChecking=no root@k8s-master kubeadm token create --print-join-command`
# echo $join --cri-socket=unix:///var/run/containerd/containerd.sock | bash
2.9 name: assign worker role label to workers
# kubectl get nodes
NAME          STATUS   ROLES           AGE     VERSION
k8s-docker1   Ready    <none>          4m21s   v1.25.4
k8s-docker2   Ready    <none>          4m21s   v1.25.4
k8s-master    Ready    control-plane   17m     v1.25.4
# kubectl label nodes k8s-docker2 k8s-docker1 node-role.kubernetes.io/worker=
node/k8s-docker2 labeled
node/k8s-docker1 labeled
# kubectl get nodes
NAME          STATUS   ROLES           AGE     VERSION
k8s-docker1   Ready    worker          4m30s   v1.25.4
k8s-docker2   Ready    worker          4m30s   v1.25.4
k8s-master    Ready    control-plane   17m     v1.25.4

3.0 name: add TAB completion for kubernetes
# kubectl completion bash > /etc/bash_completion.d/kubectl
# kubeadm completion bash > /etc/bash_completion.d/kubeadm
# source /etc/bash_completion.d/kubectl
# source /etc/bash_completion.d/kubeadm

# kubectl get pod -A --field-selector spec.nodeName=k8s-master
NAMESPACE     NAME                                       READY   STATUS    RESTARTS   AGE
kube-system   calico-kube-controllers-655f995d4d-h55kn   1/1     Running   0          18m
kube-system   calico-node-6gt9f                          1/1     Running   0          18m
kube-system   coredns-7f8cbcb969-gmxrt                   1/1     Running   0          21m
kube-system   coredns-7f8cbcb969-mskms                   1/1     Running   0          21m
kube-system   etcd-k8s-master                            1/1     Running   0          21m
kube-system   kube-apiserver-k8s-master                  1/1     Running   0          21m
kube-system   kube-controller-manager-k8s-master         1/1     Running   0          21m
kube-system   kube-proxy-dkrq6                           1/1     Running   0          21m
kube-system   kube-scheduler-k8s-master                  1/1     Running   0          21m
# kubectl get pod -A --field-selector spec.nodeName=k8s-docker1
NAMESPACE     NAME                READY   STATUS    RESTARTS   AGE
kube-system   calico-node-c5kpq   1/1     Running   0          9m15s
kube-system   kube-proxy-c2qmh    1/1     Running   0          9m15s
# kubectl get pod -A --field-selector spec.nodeName=k8s-docker2
NAMESPACE     NAME                READY   STATUS    RESTARTS   AGE
kube-system   calico-node-jg9ck   1/1     Running   0          9m17s
kube-system   kube-proxy-bjz9j    1/1     Running   0          9m17s
